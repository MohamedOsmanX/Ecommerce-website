generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(255)
}

model order_items {
  id         Int       @id @default(autoincrement())
  order_id   Int?
  product_id Int?
  quantity   Int
  price      Decimal   @db.Decimal(10, 2)
  orders     orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model orders {
  id          Int           @id @default(autoincrement())
  user_id     Int?
  total       Decimal       @db.Decimal(10, 2)
  status      String        @db.VarChar(50)
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  order_items order_items[]
  users       users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  payments    payments[]
}

model payments {
  id             Int       @id @default(autoincrement())
  order_id       Int?
  amount         Decimal   @db.Decimal(10, 2)
  payment_method String    @db.VarChar(100)
  status         String    @db.VarChar(50)
  payment_date   DateTime? @default(now()) @db.Timestamp(6)
  orders         orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model products {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  description String?
  price       Decimal       @db.Decimal(10, 2)
  category    String        @db.VarChar(255)
  imageurl    String?       @db.VarChar(255)
  stock       Int
  cart        cart[]
  order_items order_items[]
}

model users {
  id                 Int      @id @default(autoincrement())
  name               String   @db.VarChar(255)
  email              String   @unique @db.VarChar(255)
  password           String   @db.VarChar(255)
  role               String?  @default("customer")
  reset_token        String?  @db.VarChar(255)
  reset_token_expiry DateTime? @db.Timestamp(6)
  createdat          DateTime @default(now()) @db.Timestamp(6)
  cart               cart[]
  orders             orders[]
}

model cart {
  id        Int      @id @default(autoincrement())
  userid    Int
  productid Int
  quantity  Int      @default(1)
  createdat DateTime @default(now()) @db.Timestamp(6)
  products  products @relation(fields: [productid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product")
  users     users    @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")
}
